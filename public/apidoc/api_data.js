define({ "api": [  {    "type": "delete",    "url": "/templates/:id",    "title": "Delete template",    "name": "DeleteTemplate",    "group": "Template",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>Id of template</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": \"true\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/templates/index.js",    "groupTitle": "Template",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "TemplateNotFound",            "description": "<p>Cannot find template with that id</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"TemplateNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/templates/",    "title": "Get template",    "name": "GetTemplate",    "group": "Template",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>Id of template</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n [{\n  \"id\": \"1\",\n  \"name\": \"My template\",\n  \"link\": \"https://template/abcdef13579\"\n  \"questions\": [],\n  \"formIds\" [],\n  \"themeId\": [\"123\"],\n  \"lastModified\": 2016-02-10T15:46:51.778Z\",\n  \"created_at\": \"2016-02-10T15:46:51.778Z\"\n}]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/templates/index.js",    "groupTitle": "Template",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "TemplateNotFound",            "description": "<p>Cannot find template with that id</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"TemplateNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/templates/",    "title": "Update template",    "name": "PatchTemplate",    "group": "Template",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of template</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "link",            "description": "<p>Link of template</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "questions",            "description": "<p>Questions of template</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "formIds",            "description": "<p>Response versions of template</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "themeId",            "description": "<p>Theme of template</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "lastModified",            "description": "<p>Last modified time of template</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": \"true\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/templates/index.js",    "groupTitle": "Template",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "TemplateNotFound",            "description": "<p>Cannot find template with that id</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"TemplateNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/templates/",    "title": "Create new template",    "name": "PostNewTemplate",    "group": "Template",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of template</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 201 Created\n {\n  \"id\": \"1\",\n  \"name\": \"My template\",\n  \"link\": \"https://template/abcdef13579\"\n  \"questions\": [],\n  \"formIds\" [],\n  \"themeId\": [\"123\"],\n  \"lastModified\": 2016-02-10T15:46:51.778Z\",\n  \"created_at\": \"2016-02-10T15:46:51.778Z\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/templates/index.js",    "groupTitle": "Template",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "TemplateCreatedError",            "description": "<p>Check response for error</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n     \"message\": \"\\\"name\\\" is required\",\n     \"path\": [\n         \"name\"\n     ],\n     \"type\": \"any.required\",\n     \"context\": {\n         \"key\": \"name\",\n         \"label\": \"name\"\n     }\n }",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/themes/:id",    "title": "Delete Theme",    "name": "DeleteTheme",    "group": "Theme",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Themes unique ID.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : \"Theme deleted\"\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/themes/index.js",    "groupTitle": "Theme",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ThemeNotFound",            "description": "<p>The id of the Theme was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"ThemeNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/themes/public",    "title": "Get all public Theme",    "name": "GetPublicTheme",    "group": "Theme",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : Themes array\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/themes/index.js",    "groupTitle": "Theme",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ThemeNotFound",            "description": "<p>The id of the Theme was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"ThemeNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/themes/:id",    "title": "Get Theme By Id",    "name": "GetThemeById",    "group": "Theme",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Themes unique ID.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : Theme object\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/themes/index.js",    "groupTitle": "Theme",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ThemeNotFound",            "description": "<p>The id of the Theme was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"ThemeNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/themes/user/:id",    "title": "Get all user's personal themes",    "name": "GetUserThemes",    "group": "Theme",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : Themes array and user id\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/themes/index.js",    "groupTitle": "Theme",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ThemeNotFound",            "description": "<p>The id of the Theme was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"ThemeNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/themes/",    "title": "Create new Theme",    "name": "PostNewTheme",    "group": "Theme",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the Theme.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "isPublic",            "description": "<p>Is the theme public</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "font",            "description": "<p>Theme font</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "questionColor",            "description": "<p>Question color</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "answerColor",            "description": "<p>Answer color</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "buttonColor",            "description": "<p>Button color</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "backgroundColor",            "description": "<p>Background color</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "backgroundImage",            "description": "<p>Background image</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 New Theme created.",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/themes/index.js",    "groupTitle": "Theme",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ThemeCreatedError",            "description": "<p>Check response for error's information.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": err object\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/themes/",    "title": "Modify Theme information",    "name": "PutTheme",    "group": "Theme",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the Theme.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "isPublic",            "description": "<p>Is the theme public</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "font",            "description": "<p>Theme font</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "questionColor",            "description": "<p>Question color</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "answerColor",            "description": "<p>Answer color</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "buttonColor",            "description": "<p>Button color</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "backgroundColor",            "description": "<p>Background color</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "backgroundImage",            "description": "<p>Background image</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : \"Theme updated\"\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/themes/index.js",    "groupTitle": "Theme",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ThemeNotFound",            "description": "<p>The id of the Theme was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"ThemeNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/workspaces/:id",    "title": "Delete Workspace",    "name": "DeleteWorkspace",    "group": "Workspace",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Workspaces unique ID.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : \"Workspace deleted\"\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/workspaces/index.js",    "groupTitle": "Workspace",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WorkspaceNotFound",            "description": "<p>The id of the Workspace was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"WorkspaceNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/workspaces/user/:id",    "title": "Get Workspace by user Id",    "name": "GetUserWorkspaces",    "group": "Workspace",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>User ID.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : List of that user's workspaces and user id\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/workspaces/index.js",    "groupTitle": "Workspace",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the Usere was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/workspaces/:id",    "title": "Get workspace content: templates and collaborators by workspace id",    "name": "GetWorkspaceById",    "group": "Workspace",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Workspace unique ID.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : Workspace item\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/workspaces/index.js",    "groupTitle": "Workspace",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WorkspaceNotFound",            "description": "<p>The id of the Workspace was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"WorkspaceNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/workspaces",    "title": "Create new Workspace",    "name": "PostNewWorkspace",    "group": "Workspace",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the Workspace.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "adminIds",            "description": "<p>Id of the creator(s?) of the Workspace.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 New workspace created.",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/workspaces/index.js",    "groupTitle": "Workspace",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WorkspaceCreatedError",            "description": "<p>Check response for error's information.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": err object\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/workspaces/",    "title": "Modify Workspace information",    "name": "PutWorkspace",    "group": "Workspace",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "_id",            "description": "<p>Workspaces unique ID.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of the Workspace.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "adminIds",            "description": "<p>Admin(s) of the Workspace.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "collaborators",            "description": "<p>Collaborators of the Workspace.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "templates",            "description": "<p>Templates that Workspace contains.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     success : \"Workspace editted\"\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/workspaces/index.js",    "groupTitle": "Workspace",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WorkspaceNotFound",            "description": "<p>The id of the Workspace was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"WorkspaceNotFound\"\n}",          "type": "json"        }      ]    }  }] });
