[  {    "type": "delete",    "url": "/templates/:id",    "title": "Delete template",    "name": "DeleteTemplate",    "group": "Template",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>Id of template</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": \"true\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/templates/index.js",    "groupTitle": "Template",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "TemplateNotFound",            "description": "<p>Cannot find template with that id</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"TemplateNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/templates/",    "title": "Get template",    "name": "GetTemplate",    "group": "Template",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "id",            "description": "<p>Id of template</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 200 OK\n [{\n  \"id\": \"1\",\n  \"name\": \"My template\",\n  \"link\": \"https://template/abcdef13579\"\n  \"questions\": [],\n  \"formIds\" [],\n  \"themeId\": [\"123\"],\n  \"lastModified\": 2016-02-10T15:46:51.778Z\",\n  \"created_at\": \"2016-02-10T15:46:51.778Z\"\n}]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/templates/index.js",    "groupTitle": "Template",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "TemplateNotFound",            "description": "<p>Cannot find template with that id</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"TemplateNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/templates/",    "title": "Update template",    "name": "PatchTemplate",    "group": "Template",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of template</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "link",            "description": "<p>Link of template</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "questions",            "description": "<p>Questions of template</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "formIds",            "description": "<p>Response versions of template</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "themeId",            "description": "<p>Theme of template</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "lastModified",            "description": "<p>Last modified time of template</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": \"true\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/templates/index.js",    "groupTitle": "Template",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "TemplateNotFound",            "description": "<p>Cannot find template with that id</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"TemplateNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/templates/",    "title": "Create new template",    "name": "PostNewTemplate",    "group": "Template",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Name of template</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " HTTP/1.1 201 Created\n {\n  \"id\": \"1\",\n  \"name\": \"My template\",\n  \"link\": \"https://template/abcdef13579\"\n  \"questions\": [],\n  \"formIds\" [],\n  \"themeId\": [\"123\"],\n  \"lastModified\": 2016-02-10T15:46:51.778Z\",\n  \"created_at\": \"2016-02-10T15:46:51.778Z\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/templates/index.js",    "groupTitle": "Template",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "TemplateCreatedError",            "description": "<p>Check response for error</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n     \"message\": \"\\\"name\\\" is required\",\n     \"path\": [\n         \"name\"\n     ],\n     \"type\": \"any.required\",\n     \"context\": {\n         \"key\": \"name\",\n         \"label\": \"name\"\n     }\n }",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/profile/:id",    "title": "Get user profile",    "name": "GetUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Users unique ID.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user.id",            "description": "<p>Id of the User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Firstname of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Lastname of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Role of the User</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "workspace",            "description": "<p>Workspaces which user can view</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "date.created_at",            "description": "<p>Register's date</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n[{\n  \"id\": 1,\n  \"fname\": \"John\",\n  \"lname\": \"Doe\",\n  \"role\": \"user\"\n  \"email\": \"john@doe.com\"\n  \"password\": \"a49670c3c18b9e079b9cfaf51634f563dc8ae3070db2c4a8544305df1b60f007\",\n  \"profilePicture\" \"public/johndoe/avatar.jpg\"\n  \"myThemes\": [{123},{543534}]\n  \"myWorkspaces\": [{\n\n  }]\n  \"created_at\": \"2016-02-10T15:46:51.778Z\"\n}]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/userRouter/index.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/workspace/:id",    "title": "Get all workspaces user can work in",    "name": "GetWorkspace",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Users unique ID.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user.id",            "description": "<p>Id of the User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>Firstname of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Lastname of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the User</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Role of the User</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "workspace",            "description": "<p>Workspaces which user can view</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "date.created_at",            "description": "<p>Register's date</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n[{\n  \"id\": 1,\n  \"fname\": \"John\",\n  \"lname\": \"Doe\",\n  \"role\": \"user\"\n  \"email\": \"john@doe.com\"\n  \"profilePicture\" \"public/johndoe/avatar.jpg\"\n  \"myThemes\": [{123},{543534}]\n  \"myWorkspaces\": [{\n\n  }]\n  \"created_at\": \"2016-02-10T15:46:51.778Z\"\n}]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/userRouter/index.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/user/:id",    "title": "Modify User information",    "name": "PatchUserProfile",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Users unique ID.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "firstName",            "description": "<p>Firstname of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "lastName",            "description": "<p>Lastname of the User.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n [{\n     \"id\": 1,\n     \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiJiMDhmODZhZi0zNWRhLTQ4ZjItOGZhYi1jZWYzOTA0NjYwYmQifQ.-xN_h82PHVTCMA9vdoHrcZxH-x5mb11y1537t3rGzcM\"\n }]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/userRouter/index.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The id of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user/",    "title": "Sign up new user",    "name": "PostNewUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "firstName",            "description": "<p>Firstname of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "lastName",            "description": "<p>Lastname of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "role",            "description": "<p>Role of user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Email of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>password of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "profilePicture",            "description": "<p>avatar of the User.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 Created",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/userRouter/index.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserCreatedError",            "description": "<p>Check response for error's information.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"email is required\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user/",    "title": "Sign in user",    "name": "PostSignInUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Email of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>password of the User.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./routers/userRouter/index.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserCreatedError",            "description": "<p>Check response for error's information.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"email is required\"\n}",          "type": "json"        }      ]    }  }]
